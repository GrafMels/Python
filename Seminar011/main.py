{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "b972ddb3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt \n",
    "import numpy as np\n",
    "import math3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "db012e5e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.6457513110645905 -3.6457513110645907 -35.0\n"
     ]
    }
   ],
   "source": [
    "def discriminant(a, b, c):\n",
    "    D = b*b - 4*a*c\n",
    "    if D < 0:\n",
    "        return print('корней нет')\n",
    "    elif D == 0:\n",
    "        X0 = (-b)/(2*a)\n",
    "    elif D > 0:\n",
    "        X0 = (-b)/(2*a)\n",
    "        X1 = (-b+D**(0.5))/(2*a)\n",
    "        X2 = (-b-D**(0.5))/(2*a)\n",
    "    Y = 5*X0*X0 + 10*X0 - 30\n",
    "    return X1, X2, Y\n",
    "x1, x2, y = discriminant(5, 10, -30)\n",
    "print(x1, x2, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "f97a2f95",
   "metadata": {},
   "outputs": [],
   "source": [
    "range_x_y = 7\n",
    "x = np.arange(-range_x_y, range_x_y, 0.001)\n",
    "y = np.arange(-range_x_y, range_x_y, 0.001)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "a1b91176",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(x, (5*y*y)+(10*y)-30, 'r')\n",
    "ax = plt.gca()\n",
    "\n",
    "# plot X - axis    \n",
    "ax.axhline(y=0, color='k')\n",
    "\n",
    "# plot Y - axis    \n",
    "ax.axvline(x=0, color='k')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b67fddd",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "381954dd",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f5763f5e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2b00730a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
